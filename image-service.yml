---
spring:
  profiles: cloud
  application:
    name: image-service
  cloud:
    config:
      discovery:
        enabled: true
      uri: ${vcap.services.${PREFIX:}config-server.credentials.uri:http://${PREFIX:}${config-server.${application.domain:cfapps.io}}}
  jpa:
    show_sql: true
    database: POSTGRESQL
    hibernate:
      ddl-auto: none
  http:
    multipart:
      max-file-size: 25600MB
      max-request-size: 25600MB
eureka:
  client:
    eureka-connection-idle-timeout-seconds: 3000
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://${PREFIX:}eureka.${application.domain:cfapps.io}}/eureka/
  instance:
    hostname: ${PREFIX:}${spring.application.name}.${application.domain:cfapps.io}
    nonSecurePort: 80
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
ribbon:
  ReadTimeout: 18000000
  ConnectTimeout: 18000000
  eureka:
    enabled: true

---

spring:
  profiles: development
  application:
    name: image-service
  cloud:
    config:
      discovery:
        enabled: true
  jpa:
    show_sql: true
    hibernate:
      ddl-auto: validate
      naming:
        strategy: org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    database: POSTGRESQL
  datasource:
    initialize: false
    url: jdbc:postgresql://localhost:5432/imagedb
    username: sysadm
    password: sysadm
    driver-class-name: org.postgresql.Driver
    tomcat:
      default-auto-commit: false
    dbcp:
      default-auto-commit: false
  http:
    multipart:
      max-file-size: 25600MB
      max-request-size: 25600MB
server:
  port: 9004
eureka:
  instance:
    hostname: image-service
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    prefer-ip-address: true
    nonSecurePort: ${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    eureka-connection-idle-timeout-seconds: 3000
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
ribbon:
  ReadTimeout: 18000000
  ConnectTimeout: 18000000
  eureka:
    enabled: false
encrypt:
  failOnError: false

---

spring:
  profiles: docker
  application:
    name: image-service
  cloud:
    config:
      discovery:
        enabled: true
  jpa:
    show_sql: true
    hibernate:
      ddl-auto: none
      naming:
        strategy: org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    database: POSTGRESQL
  datasource:
    initialize: false
    url: jdbc:postgresql://imagedb:5432/imagedb
    username: sysadm
    password: sysadm
    driver-class-name: org.postgresql.Driver
    tomcat:
      default-auto-commit: false
    dbcp:
      default-auto-commit: false
    hikari:
      auto-commit: false
  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 200MB
  mvc:
    async:
      request-timeout: 3600s
  session:
    timeout: 3600s
  transaction:
    default-timeout: 3600s
server:
  port: 9004
  connection-timeout: -1s
  session:
    timeout: 3600s
eureka:
  instance:
    hostname: image-service
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    prefer-ip-address: true
    nonSecurePort: ${server.port}
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
  client:
    registerWithEureka: true
    fetchRegistry: true
    eureka-connection-idle-timeout-seconds: 3000
    eureka-server-read-timeout-seconds: 5000
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/
ribbon:
  ReadTimeout: 18000000
  ConnectTimeout: 18000000
  eureka:
    enabled: true
encrypt:
  failOnError: false