version: "3"

networks:
  front:
  back:

services:
  usersdb:
    container_name: usersdb
    image: mateuszsojka/usersdb:latest
    volumes:
      - ./usersdb/postgresql:/etc/postgresql
      - ./usersdb/log:/var/log/postgresql
      - ./usersdb/lib:/var/lib/postgresql
    networks:
     - back

  imagedb:
    container_name: imagedb
    image: mateuszsojka/imagedb:latest
    volumes:
      - ./imagedb/postgresql:/etc/postgresql
      - ./imagedb/log:/var/log/postgresql
      - ./imagedb/lib:/var/lib/postgresql
    depends_on:
     - usersdb
    networks:
     - back

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.2
    environment:
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./es_data:/usr/share/elasticsearch/data
    networks:
     - back

  kibana:
    image: docker.elastic.co/kibana/kibana:6.6.2
    ports:
      - "5601:5601"
    environment:
      - "xpack.security.enabled=false"
    depends_on:
     - elasticsearch
    networks:
     - back

  logstash:
    image: docker.elastic.co/logstash/logstash:6.6.2
    volumes:
      - ./elk-config/logstash.config:/usr/share/logstash/config/logstash.config:ro
    environment:
     - "xpack.security.enabled=false"
    command: logstash -f /usr/share/logstash/config/logstash.config --config.reload.automatic
    depends_on:
     - elasticsearch
    networks:
     - back
     
  grafana:
    image: grafana/grafana:5.4.3
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      back:
        aliases:
          - grafana
  prometheus:
    image: prom/prometheus:v2.6.1
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    networks:
      back:
        aliases:
          - prometheus

  eureka-service:
    image: mateuszsojka/eureka-service:latest
    networks:
     - back
    environment:
     - "SPRING_PROFILES_ACTIVE=docker"

  config-server:
    image: mateuszsojka/config-server:latest
    restart: always
    depends_on:
     - eureka-service
    networks:
     - back
    environment:
     - "SPRING_PROFILES_ACTIVE=docker"

  auth-service:
    image: mateuszsojka/auth-service:latest
    restart: always
    depends_on:
     - eureka-service
     - config-server
     - logstash
    networks:
     - back
    environment:
     - "SPRING_PROFILES_ACTIVE=docker"
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"
        tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"

  image-service:
    image: mateuszsojka/image-service:latest
    restart: always
    depends_on:
     - eureka-service
     - config-server
     - logstash
    networks:
     - back
    ports:
     - 9004:9004
     - 5005:5005
    environment:
     - "SPRING_PROFILES_ACTIVE=docker"

  api-gateway:
    image: mateuszsojka/api-gateway:latest
    restart: always
    depends_on:
     - logstash
     - eureka-service
     - config-server
     - auth-service
     - image-service
    ports:
     - 8080:8080
    networks:
     - back
     - front
    environment:
     - "SPRING_PROFILES_ACTIVE=docker"
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://127.0.0.1:25826"
        tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"

