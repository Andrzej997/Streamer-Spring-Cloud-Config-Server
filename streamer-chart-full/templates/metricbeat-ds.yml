{{- $image := printf "docker.elastic.co/beats/%s:%s" .Values.metricbeat.imageName .Values.metricbeatVersion -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-modules
  labels:
    enviroment: {{ .Values.enviroment }}
    app.kubernetes.io/name: {{ .Values.metricbeat.name }}
    app.kubernetes.io/version: {{ .Values.metricbeatVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: {{ .Values.enviroment }}
    app.kubernetes.io/managed-by: helm
data:
  system.yml: |-
    - module: system
      period: 10s
      metricsets:
        - cpu
        - load
        - memory
        - network
        - process
        - process_summary
        #- core
        #- diskio
        #- socket
      processes: ['.*']
      process.include_top_n:
        by_cpu: 5      # include top 5 processes by CPU
        by_memory: 5   # include top 5 processes by memory

    - module: system
      period: 1m
      metricsets:
        - filesystem
        - fsstat
      processors:
      - drop_event.when.regexp:
          system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'
  kubernetes.yml: |-
    - module: kubernetes
      metricsets:
        - node
        - system
        - pod
        - container
        - volume
      period: 10s
      hosts: ["localhost:10255"]
---
# Deploy a Metricbeat instance per node for node metrics retrieval
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ .Values.metricbeat.name }}
  labels:
    enviroment: {{ .Values.enviroment }}
    app.kubernetes.io/name: {{ .Values.metricbeat.name }}
    app.kubernetes.io/version: {{ .Values.metricbeatVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: {{ .Values.enviroment }}
    app.kubernetes.io/managed-by: helm
spec:
  template:
    metadata:
      labels:
        enviroment: {{ .Values.enviroment }}
        app.kubernetes.io/name: {{ .Values.metricbeat.name }}
        app.kubernetes.io/version: {{ .Values.metricbeatVersion }}
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: {{ .Values.enviroment }}
        app.kubernetes.io/managed-by: helm
    spec:
      serviceAccountName: {{ .Values.metricbeat.name }}
      terminationGracePeriodSeconds: {{ .Values.metricbeat.terminationGracePeriodSeconds }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: {{ .Values.metricbeat.name }}
          image: {{ $image }}
          args: ["-c", "/etc/metricbeat.yml","-e","-system.hostfs=/hostfs"]
          env:
            - name: ELASTICSEARCH_HOST
              value: {{ .Values.elasticsearch.name }}
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: ELASTICSEARCH_USERNAME
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: ELASTICSEARCH_PASSWORD
            - name: POD_NAMESPACE
              value: default
          securityContext:
            runAsUser: 0
          resources:
            limits:
              memory: {{ .Values.metricbeat.memoryLimit }}
              cpu: {{ .Values.metricbeat.cpuLimit }}
            requests:
              cpu: {{ .Values.metricbeat.cpuRequest }}
              memory: {{ .Values.metricbeat.memoryRequest }}
          volumeMounts:
            - name: config
              mountPath: /etc/metricbeat.yml
              readOnly: true
              subPath: metricbeat.yml
            - name: modules
              mountPath: /usr/share/metricbeat/modules.d
              readOnly: true
            - name: dockersock
              mountPath: /var/run/docker.sock
            - name: proc
              mountPath: /hostfs/proc
              readOnly: true
            - name: cgroup
              mountPath: /hostfs/sys/fs/cgroup
              readOnly: true
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
        - name: config
          configMap:
            defaultMode: 0600
            name: env
        - name: modules
          configMap:
            defaultMode: 0600
            name: metricbeat-daemonset-modules
        # We set an `emptyDir` here to ensure the manifest will deploy correctly.
        # It's recommended to change this to a `hostPath` folder, to ensure internal data
        # files survive pod changes (ie: version upgrade)
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-deployment-modules
  namespace: kube-system
  labels:
    enviroment: {{ .Values.enviroment }}
    app.kubernetes.io/name: {{ .Values.metricbeat.name }}
    app.kubernetes.io/version: {{ .Values.metricbeatVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: {{ .Values.enviroment }}
    app.kubernetes.io/managed-by: helm
data:
  # This module requires `kube-state-metrics` up and running under `kube-system` namespace
  kubernetes.yml: |-
    - module: kubernetes
      metricsets:
        - state_node
        - state_deployment
        - state_replicaset
        - state_pod
        - state_container
        # Uncomment this to get k8s events:
        #- event
      period: 10s
      hosts: ["kube-state-metrics:8080"]
---
# Deploy singleton instance in the whole cluster for some unique data sources, like kube-state-metrics
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.metricbeat.name }}
  namespace: kube-system
  labels:
    enviroment: {{ .Values.enviroment }}
    app.kubernetes.io/name: {{ .Values.metricbeat.name }}
    app.kubernetes.io/version: {{ .Values.metricbeatVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: {{ .Values.enviroment }}
    app.kubernetes.io/managed-by: helm
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.metricbeat.name }}
        app.kubernetes.io/version: {{ .Values.metricbeatVersion }}
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: {{ .Values.enviroment }}
        app.kubernetes.io/managed-by: helm
    spec:
      serviceAccountName: {{ .Values.metricbeat.name }}
      containers:
        - name: {{ .Values.metricbeat.name }}
          image: {{ $image }}
          args: ["-c", "/etc/metricbeat.yml","-e"]
          env:
            - name: ELASTICSEARCH_HOST
              value: {{ .Values.elasticsearch.name }}
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: ELASTICSEARCH_USERNAME
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: ELASTICSEARCH_PASSWORD
            - name: POD_NAMESPACE
              value: default
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: {{ .Values.metricbeat.cpuLimit }}
              memory: {{ .Values.metricbeat.memoryLimit }}
            requests:
              cpu: {{ .Values.metricbeat.cpuRequest }}
              memory: {{ .Values.metricbeat.memoryRequest }}
          volumeMounts:
            - name: config
              mountPath: /etc/metricbeat.yml
              readOnly: true
              subPath: metricbeat.yml
            - name: modules
              mountPath: /usr/share/metricbeat/modules.d
              readOnly: true
      volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: env
        - name: modules
          configMap:
            defaultMode: 0600
            name: metricbeat-deployment-modules
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.metricbeat.name }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.metricbeat.name }}
    namespace: default
roleRef:
  kind: ClusterRole
  name: {{ .Values.metricbeat.name }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: {{ .Values.metricbeat.name }}
  labels:
    enviroment: {{ .Values.enviroment }}
    app.kubernetes.io/name: {{ .Values.metricbeat.name }}
    app.kubernetes.io/version: {{ .Values.metricbeatVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: {{ .Values.enviroment }}
    app.kubernetes.io/managed-by: helm
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - events
      - pods
    verbs:
      - get
      - watch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.metricbeat.name }}
  labels:
    enviroment: {{ .Values.enviroment }}
    app.kubernetes.io/name: {{ .Values.metricbeat.name }}
    app.kubernetes.io/version: {{ .Values.metricbeatVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: {{ .Values.enviroment }}
    app.kubernetes.io/managed-by: helm
