---
spring:
  profiles: cloud
  application:
    name: eureka-service
  cloud:
    config:
      serviceId: config-server
      discovery:
        enabled: true
      uri: ${vcap.services.${PREFIX:}config-server.credentials.uri:http://${PREFIX:}${config-server.${application.domain:cfapps.io}}}
server:
  port: 8761
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false
eureka:
  instance:
    hostname: ${PREFIX:}${spring.application.name}.${application.domain:cfapps.io}
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    registerWithEureka: false
    fetchRegistry: false
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://${PREFIX:}eureka.${application.domain:cfapps.io}}/eureka/
  server:
    enable-self-preservation: false

---

spring:
  profiles: development
  application:
    name: eureka-service
  cloud:
    config:
      serviceId: config-server
      discovery:
        enabled: true
server:
  port: 8761
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false
eureka:
  instance:
    hostname: eureka-service
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    prefer-ip-address: true
  client:
    healthcheck:
      enabled: true
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  server:
    enable-self-preservation: false

---

spring:
  profiles: docker
  application:
    name: eureka-service
  cloud:
    config:
      serviceId: config-server
      discovery:
        enabled: true
server:
  port: 8761
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false
eureka:
  instance:
    hostname: eureka-service
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    healthcheck:
      enabled: true
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/
  server:
    enable-self-preservation: false
---
spring:
  profiles: aws
  application:
    name: eureka-service
  cloud:
    config:
      uri: http://config-server:8888
      discovery:
        serviceId: config-server
server:
  port: 8761
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false
eureka:
  instance:
    prefer-ip-address: false
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    hostname: eureka-service
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/