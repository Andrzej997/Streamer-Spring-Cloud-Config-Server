---
spring:
  profiles: cloud
  application:
    name: music-service
  jpa:
    show_sql: true
    database: POSTGRESQL
    hibernate:
      ddl-auto: none
  cloud:
    config:
      uri: ${vcap.services.${PREFIX:}config-server.credentials.uri:http://${PREFIX:}${config-server.${application.domain:cfapps.io}}}
eureka:
  client:
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://${PREFIX:}eureka.${application.domain:cfapps.io}}/eureka/
  instance:
    hostname: ${PREFIX:}${spring.application.name}.${application.domain:cfapps.io}
    nonSecurePort: 80
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
ribbon:
  eureka:
    enabled: true

---

spring:
  profiles: development
  cloud:
    config:
      discovery:
        enabled: true
server:
  port: 9006
eureka:
  instance:
    hostname: music-service
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
ribbon:
  eureka:
    enabled: false
encrypt:
  failOnError: false
logging:
  file: log.txt
  level: error

---

spring:
  profiles: docker
  cloud:
    config:
      discovery:
        enabled: true
server:
  port: 9006
eureka:
  instance:
    hostname: music-service
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/
ribbon:
  eureka:
    enabled: false
encrypt:
  failOnError: false
logging:
  file: log.txt
  level: error