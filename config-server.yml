---

spring:
  profiles: cloud
  application:
    name: config-server
  cloud:
    config:
      discovery:
        enabled: true
        serviceId: config-server
      server:
        git:
          uri: https://github.com/Andrzej997/Streamer-Spring-Cloud-Config-Server
server:
  port: 8888
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false
eureka:
  instance:
    hostname: ${PREFIX:}${spring.application.name}.${application.domain:cfapps.io}
    nonSecurePort: 80
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://${PREFIX:}eureka.${application.domain:cfapps.io}}/eureka/

---

spring:
  profiles: development
  cloud:
    config:
      server:
        git:
          uri: https://github.com/Andrzej997/Streamer-Spring-Cloud-Config-Server
          clone-on-start: true
        health:
          repositories:
            movie:
              label: master
      discovery:
        enabled: true
        serviceId: config-server
server:
  port: 8888
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false
eureka:
  instance:
    hostname: config-server
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
service:
  definition:
    metadata:
        uri: http://${spring.application.name}-mateuszsojka.${application.domain:cfapps.io}
encrypt:
  failOnError: false
logging:
  file: log.txt
  level: error

---
spring:
  profiles: docker
  cloud:
    config:
      server:
        git:
          uri: https://github.com/Andrzej997/Streamer-Spring-Cloud-Config-Server
          clone-on-start: true
        health:
          repositories:
            movie:
              label: master
      discovery:
        enabled: true
        serviceId: config-server
server:
  port: 8888
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false
eureka:
  instance:
    hostname: config-server
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: 172.17.0.7:8761/eureka/
encrypt:
  failOnError: false
logging:
  file: log.txt
  level: error
---