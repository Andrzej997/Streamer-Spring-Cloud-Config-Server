---

spring:
  profiles: cloud
  application:
    name: config-server
  cloud:
    config:
      discovery:
        enabled: true
        serviceId: config-server
      server:
        git:
          uri: https://github.com/Andrzej997/Streamer-Spring-Cloud-Config-Server
server:
  port: 8888
management:
  metrics:
    export:
      elastic:
        host: http://elasticsearch:9200
        enabled: true
        step: 1m
        index: metrics
    enable: true
  endpoint:
    health:
      enabled: true
    metrics:
      enabled: true
    auditevents:
      enabled: true
    httptrace:
      enabled: true
    shutdown:
      enabled: true
    restart:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
eureka:
  instance:
    hostname: ${PREFIX:}${spring.application.name}.${application.domain:cfapps.io}
    nonSecurePort: 80
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://${PREFIX:}eureka.${application.domain:cfapps.io}}/eureka/

---

spring:
  profiles: development
  application:
    name: config-server
  cloud:
    config:
      server:
        git:
          uri: https://github.com/Andrzej997/Streamer-Spring-Cloud-Config-Server
          clone-on-start: true
      discovery:
        enabled: true
        serviceId: config-server
server:
  port: 8888
management:
  metrics:
    export:
      elastic:
        host: http://elasticsearch:9200
        enabled: true
        step: 1m
        index: metrics
    enable: true
  endpoint:
    health:
      enabled: true
    metrics:
      enabled: true
    auditevents:
      enabled: true
    httptrace:
      enabled: true
    shutdown:
      enabled: true
    restart:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
eureka:
  instance:
    hostname: config-server
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    prefer-ip-address: true
    nonSecurePort: ${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://elasticsearch:8761/eureka/
service:
  definition:
    metadata:
        uri: http://${spring.application.name}-mateuszsojka.${application.domain:cfapps.io}
encrypt:
  failOnError: false

---
spring:
  profiles: docker
  application:
    name: config-server
  cloud:
    config:
      server:
        git:
          uri: https://github.com/Andrzej997/Streamer-Spring-Cloud-Config-Server
          clone-on-start: true
      discovery:
        enabled: true
        serviceId: config-server
server:
  port: 8888
management:
  metrics:
    export:
      elastic:
        host: http://elasticsearch:9200
        enabled: true
        step: 1m
        index: metrics
    enable: true
  endpoint:
    health:
      enabled: true
    metrics:
      enabled: true
    auditevents:
      enabled: true
    httptrace:
      enabled: true
    shutdown:
      enabled: true
    restart:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
eureka:
  instance:
    hostname: config-server
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    nonSecurePort: ${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/
encrypt:
  failOnError: false
---
spring:
  profiles: aws
  application:
    name: config-server
  cloud:
    config:
      server:
        git:
          uri: https://github.com/Andrzej997/Streamer-Spring-Cloud-Config-Server
          clone-on-start: true
      discovery:
        enabled: true
        serviceId: config-server
server:
  port: 8888
management:
  metrics:
    export:
      elastic:
        host: http://elasticsearch:9200
        enabled: true
        step: 1m
        index: metrics
    enable: true
  endpoint:
    health:
      enabled: true
    metrics:
      enabled: true
    auditevents:
      enabled: true
    httptrace:
      enabled: true
    shutdown:
      enabled: true
    restart:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
eureka:
  instance:
    hostname: config-server
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    nonSecurePort: ${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/
encrypt:
  failOnError: false
---