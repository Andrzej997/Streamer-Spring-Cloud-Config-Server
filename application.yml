info:
  description: Streamer config
  url: https://github.com/Andrzej997/Streamer

---
spring:
  profiles: cloud
  cloud:
    config:
      uri: ${vcap.services.${PREFIX:}config-server.credentials.uri:http://${PREFIX:}${config-server.${application.domain:cfapps.io}}}
cloudfoundry:
  sso:
    tokenUri: ${vcap.services.${PREFIX:}uaa.credentials.tokenUri:}
    authorizationUri: ${vcap.services.${PREFIX:}uaa.credentials.authorizationUri:}
    tokenInfoUri: ${vcap.services.${PREFIX:}uaa.credentials.tokenInfoUri:}
    clientId: ${vcap.services.${PREFIX:}uaa.credentials.clientId:}
    clientSecret: ${vcap.services.${PREFIX:}uaa.credentials.clientSecret:}
  resource:
    tokenInfoUri: ${vcap.services.${PREFIX:}resource.credentials.tokenInfoUri:}
    clientId: ${vcap.services.${PREFIX:}resource.credentials.clientId:}
    clientSecret: ${vcap.services.${PREFIX:}resource.credentials.clientSecret:}
    serviceId: ${PREFIX:}resource
application:
  domain: ${APPLICATION_DOMAIN:cfapps.io}
management:
  metrics:
    web:
      server:
        auto-time-requests: true
    export:
      elastic:
        host: http://elasticsearch:9200
        enabled: true
        step: 1s
        index: metrics
  endpoint:
    health:
      enabled: true
    metrics:
      enabled: true
    auditevents:
      enabled: true
    httptrace:
      enabled: true
    shutdown:
      enabled: true
    restart:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
    enabled-by-default: true
eureka:
  instance:
    hostname: ${PREFIX:}${spring.application.name}.${application.domain:cfapps.io}
    nonSecurePort: 80
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://${PREFIX:}eureka.${application.domain:cfapps.io}}/eureka/

---
spring:
  profiles: docker
  cloud:
    config:
      uri: http://config-server:8888
      discovery:
        enabled: true
        serviceId: config-server
management:
  metrics:
    web:
      server:
        auto-time-requests: true
    export:
      elastic:
        host: http://elasticsearch:9200
        enabled: true
        step: 1s
        index: metrics
  endpoint:
    health:
      enabled: true
    metrics:
      enabled: true
    auditevents:
      enabled: true
    httptrace:
      enabled: true
    shutdown:
      enabled: true
    restart:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
    enabled-by-default: true
eureka:
  instance:
    nonSecurePort: 80
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    serviceUrl:
        defaultZone: http://eureka-service:8761/eureka/
---
spring:
  profiles: development
  cloud:
    config:
      uri: http://localhost:8888
      discovery:
        enabled: true
        serviceId: config-server
management:
  metrics:
    web:
      server:
        auto-time-requests: true
    export:
      elastic:
        host: http://localhost:9200
        enabled: true
        step: 1s
        index: metrics
  endpoint:
    health:
      enabled: true
    metrics:
      enabled: true
    auditevents:
      enabled: true
    httptrace:
      enabled: true
    shutdown:
      enabled: true
    restart:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
    enabled-by-default: true
eureka:
  instance:
    nonSecurePort: 80
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    serviceUrl:
        defaultZone: http://localhost:8761/eureka/
